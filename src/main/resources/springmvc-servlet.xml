<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan base-package="com" />
	
	<bean	class="org.springframework.web.servlet.view.InternalResourceViewResolver"	id="internalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix" value="/jsp/" />
		<!-- 后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="dataSource"	class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- MySQL数据库驱动 -->
		<property name="driverClassName"	value="com.mysql.jdbc.Driver" />
		<!-- 连接数据库的URL -->
		<property name="url"
			value="jdbc:mysql://localhost:3306/reserveseat?characterEncoding=utf8&amp;useSSL=false" />
		<!-- 连接数据库的用户名 -->
		<property name="username" value="root" />
		<!-- 连接数据库的密码 -->
		<property name="password" value="1004szy?123" />
	</bean>
	<!-- 配置JDBC模板 -->
	<bean id="jdbcTemplate"	class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 为数据源添加事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 为事务管理器注册注解驱动 -->
	<tx:annotation-driven	transaction-manager="txManager" />


	<!-- 配置MyBatis工厂，同时指定数据源，并与MyBatis完美整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- configLocation的属性值为MyBatis的核心配置文件 -->
		<property name="configLocation"	value="classpath:mappers/mybatis-config.xml" />
	</bean>
	<!--Mapper代理开发，使用Spring自动扫描MyBatis的接口并装配Spring将指定包中所有被@Mapper注解标注的接口自动装配为MyBatis的映射接口） -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- mybatis-spring组件的扫描器。com.dao只需要接口（接口方法与SQL映射文件中相同） -->
		<property name="basePackage"	value="com.admin.dao,com.user.dao" />
		<property name="sqlSessionFactoryBeanName"	value="sqlSessionFactory" />
	</bean>
	
	
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"  
        p:defaultEncoding="UTF-8"  
        p:maxUploadSize="5400000"
        p:uploadTempDir="fileUpload/temp" 
     > 
       </bean> 

	
   <!-- 设置可通过spring找到的资源包 -->
   <mvc:annotation-driven></mvc:annotation-driven>
	<mvc:resources location="/images/" mapping="/images/**"></mvc:resources>
	<mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
	<mvc:resources location="/fonts/" mapping="/fonts/**"></mvc:resources>
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
	<mvc:resources location="/uploadfiles/" mapping="/uploadfiles/**"></mvc:resources>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/order/order"/>
			<bean class="com.interceptor.UserInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>


</beans>